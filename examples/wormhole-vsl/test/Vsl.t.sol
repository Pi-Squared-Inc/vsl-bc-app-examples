// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "forge-std/Test.sol";
import "../src/Vsl/Vsl.sol";
import "../src/EVMViewFnVerifier/libs/PodECDSA.sol";
import "../src/EVMViewFnVerifier/libs/PodRegistry.sol";

// TODO: Clean and update this test
contract VslTest is Test {
    Vsl vsl;

    function setUp() public {
        address[] memory committee = new address[](4);
        committee[0] = address(0xD64C0A2A1BAe8390F4B79076ceaE7b377B5761a3);
        committee[1] = address(0x7D5761b7b49fC7BFdD499E3AE908a4aCFe0807E6);
        committee[2] = address(0x06aD294f74dc98bE290E03797e745CF0D9c03dA2);
        committee[3] = address(0x8646d958225301A00A6CB7b6609Fa23bab87DA7C);

        PodRegistry podRegistry = new PodRegistry(committee);

        PodECDSA.PodConfig memory podConfig = PodECDSA.PodConfig({
            quorum: 2,
            registry: podRegistry
        });

        vsl = new Vsl(2, podConfig);
    }

    function test_verifyClaim() public {
        // bytes memory encodedClaim = hex"000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000044000000000000000000000000000000000000000000000000000000000000005200000000000000000000000000000000000000000000000000000000000007a69000000000000000000000000000000000000000000000000000000000000000945564d56696577466e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009896b139a5054908e5fd6d9be13e3b53747fb4652b3ad234cf7b24ae89612d141dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934700000000000000000000000000000000000000000000000000000000000000000a78e33126c23d18fda79affffa8767113639433c704e6211421aab2f4403a4055e83443b64393346648b88f1ce5e1e09b88862a1e396d0278cdd22ca93c1f309ab67d0774956a4aded02cea12f204fdb98bdd8a4eb314aa5e4cce3de21999d600000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012c0000000000000000000000000000000000000000000000000000000001c9c380000000000000000000000000000000000000000000000000000000000007db040000000000000000000000000000000000000000000000000000000067adf13af39fd6e51aad88f6f4ce6ab8827279cfffb92266000000000000000000000000dc64a140aa3e981100a9beca4e685f962f0cf6c9000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000440bee938600000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000008a791620dd6260079bf849dc5567adc3f2fdc3180000000000000000000000008a791620dd6260079bf849dc5567adc3f2fdc31800000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000d99945ff100000000000000000000000000165878a594ca255338adfa4d48449f69242eb8f0000000000000000000000000165878a594ca255338adfa4d48449f69242eb8f00910000000000000000000000000000000000000000000000000000000000000001000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266004f994e54540800000002540be400000000000000000000000000cf7ed3acca5a467e9e704c703e8d87f634fb0fc9000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb922660002000000000000000000";
        // bytes32[] memory proof = new bytes32[](4);
        // proof[0] = 0x02a5df6012a45a606b74605552528a806a0886be009221aa2755c815c5b9d315;
        // proof[1] = 0xdc4080edcdd85a87d3c294ffba47c1949fc4d8b9b0cf59ba31dba55c2f6a227b;
        // proof[2] = 0x1ec67ecc36044412030310e27b8b404f4b0a1557947c7311f2a02abef23b0f2e;
        // proof[3] = 0xd0f66361c3cfd50dfc9f28acb5fc4715c348da4c7e35b074a9a950cc3197f6de;

        // PodECDSA.Certificate memory certificate = PodECDSA.Certificate({
        //     certifiedReceipt: PodECDSA.CertifiedReceipt({
        //         receiptRoot: 0x7a521ea27872a968254e791d860b752df41b08526c9a5e9ff3db2c4bc6d58e72,
        //         aggregateSignature: hex"0685f518ea7fd7afa3f6f6c90cb3978d478df28e9fca4dd5e125787fc532ec2450e0dc34667bb50360a2776291d58ef8608c23dc140312e992b39d4bde358d161bd6156e2c9aa7723208a20fa434268b26cdad918f03cef656a325211f65b1bb5545c66f8b428c9cf9da93c349052d85e2a7f4b62c5f6e9961c10103c5c859ddab1ba4577182af64c3a25f178cf86c1a42afde1868bcfca6886709872d7410ef74825d863a696fbdcbd130b697ea73013e2f83c74dee41467e1d6bb7a57b5726f5ad1b"
        //     }),
        //     leaf: 0x331d84b66e0a547cef9a79a288493e3af73abcddf0a8cf68ee180a4ee22c5967,
        //     proof: MerkleTree.Proof({
        //         path: proof
        //     })
        // });

        // usl.deliverClaim(encodedClaim, certificate);
    }

    function test_verifyClaim2() public {
        // bytes memory encodedClaim = hex"000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000044000000000000000000000000000000000000000000000000000000000000005200000000000000000000000000000000000000000000000000000000000007a69000000000000000000000000000000000000000000000000000000000000000945564d56696577466e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005998436ef79fd8aec97607c172839a7fa0fca05bacd837902bb5f9f1faf7a97c1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d493470000000000000000000000000000000000000000000000000000000000000000f7d0f9d4ad92955029bb64d6d408a4c7feaee87a1910ba610de00070168fdc709e784f4358d9e3b013f8d10006e80d13be54d40c31155e6b8e1ea352b6baca27bf8582e6286445c1317a86ea5b18783706ec6878db166f79a0a68c339171ef4400000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011de0000000000000000000000000000000000000000000000000000000001c9c380000000000000000000000000000000000000000000000000000000000007db3e0000000000000000000000000000000000000000000000000000000067aef39fd6e51aad88f6f4ce6ab8827279cfffb92266000000000000000000000000dc64a140aa3e981100a9beca4e685f962f0cf6c9000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000440bee938600000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000008a791620dd6260079bf849dc5567adc3f2fdc3180000000000000000000000008a791620dd6260079bf849dc5567adc3f2fdc31800000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000d99945ff100000000000000000000000000165878a594ca255338adfa4d48449f69242eb8f0000000000000000000000000165878a594ca255338adfa4d48449f69242eb8f00910000000000000000000000000000000000000000000000000000000000000002000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266004f994e54540800000002540be400000000000000000000000000cf7ed3acca5a467e9e704c703e8d87f634fb0fc9000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb922660002000000000000000000";
        
        // bytes32[] memory proof = new bytes32[](4);
        // proof[0] = 0x1cc83dcda324a7feb2bc3a4025e7b19113ffbcef16c9c022fae4add81f965894;
        // proof[1] = 0xdc4080edcdd85a87d3c294ffba47c1949fc4d8b9b0cf59ba31dba55c2f6a227b;
        // proof[2] = 0xfa095237af11ab7243d3547ed3bfdfee4fb8b7ca33a4ce58901c2a33ec3dc477;
        // proof[3] = 0xd26c1aa5b6e51ec67e702b33e9ffdaad529bd259358ca4751d83aed25870fa07;

        // PodECDSA.Certificate memory certificate = PodECDSA.Certificate({
        //     certifiedReceipt: PodECDSA.CertifiedReceipt({
        //         receiptRoot: 0x23e0fcb0d52f09d3277172bdf594e85cae685d80182c5660015dacc487b95042,
        //         aggregateSignature: hex"b4672397da4ed1ccbae84dba638327dd7f5d75d2cd653064a5637425f3f98b17161a93bb299f998a5f90183af7a779bc0736606006e0dec448ee59e8bdd50ce61c2259bbe4fa9e10143003a4bf6a38fdcc175ab9e2f7f51ef8be8f95e2187b4dcd276fccea295e8a78e83de5dc2741bddd7d1f75315e7481fbc378c973157795e21c9829962d5ab95aa483049abb4f1de00f05bcd802aac8fe34af86680addb1ef017c8c44b704f718e2456b2d06b338e0a28da848d723b51a8fe5e5d635ff9980a61c"
        //     }),
        //     leaf: 0x3075b8871e2d9f968abea0baf2ee62bd041fd5643388f760c5f3609700f6eed2,
        //     proof: MerkleTree.Proof({
        //         path: proof
        //     })
        // });

        // usl.deliverClaim(encodedClaim, certificate);
    }

    function test_verifyClaim3() public {
        // bytes memory encodedClaim = hex"000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000044000000000000000000000000000000000000000000000000000000000000005200000000000000000000000000000000000000000000000000000000000007a69000000000000000000000000000000000000000000000000000000000000000945564d56696577466e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017270cc398c08dae627a44e616489683b72ba778b10a4abec7476ab64ec1bc6b1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d493470000000000000000000000000000000000000000000000000000000000000000f7a004d993006b15f0cbd1b518e3276779601013397719b1928f91f18b9e2b961cc9c4eac3da740861c2e7c7e0534e3f59d3f7e599f5c3b6c72b061a4557277c270722aad74a2251f5f4d17a7a17260c730c72e854a56c7d2464bfbe7825ddee00000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014c0000000000000000000000000000000000000000000000000000000001c9c38000000000000000000000000000000000000000000000000000000000000860d60000000000000000000000000000000000000000000000000000000067aef39fd6e51aad88f6f4ce6ab8827279cfffb92266000000000000000000000000dc64a140aa3e981100a9beca4e685f962f0cf6c9000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000440bee938600000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000008a791620dd6260079bf849dc5567adc3f2fdc3180000000000000000000000008a791620dd6260079bf849dc5567adc3f2fdc31800000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000d99945ff100000000000000000000000000165878a594ca255338adfa4d48449f69242eb8f0000000000000000000000000165878a594ca255338adfa4d48449f69242eb8f00910000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266004f994e54540800000002540be400000000000000000000000000cf7ed3acca5a467e9e704c703e8d87f634fb0fc9000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb922660002000000000000000000";
        // bytes32[] memory proof = new bytes32[](4);
        // proof[0] = 0x9eefccbdc5fa584ad302d3c19a464940b00229db070e350ce5152c0844fb3744;
        // proof[1] = 0xe443536227b07275a1d4f50cfbe72b71a90a3fcf1db0c85472c02545cf12b67c;
        // proof[2] = 0x97c3a4e5d42f3e914328d15705cd5323c36787a8f9bb25872257b43bce6b43b7;
        // proof[3] = 0x3360dc53ae1e5b1a5606b382cd1182bfe95ebb5cecf4ff16c64d1479ddcd0e21;

        // PodECDSA.Certificate memory certificate = PodECDSA.Certificate({
        //     certifiedReceipt: PodECDSA.CertifiedReceipt({
        //         receiptRoot: 0x1cd3ea7a73b79c13773492e28c0e430f5bc377228fe13b56c38a1c097b4d289a,
        //         aggregateSignature: hex"9a99890dd87bd6b4e303bec92459e9b19af6f9ce25db94ab3221387cf3c247477929c081bd9880cafbbd1ca6adfd9566d0d4bd295c7ea8edb255418d715355fb1c638589872c26ae98aea6d43cd1dd6d0c0fa774c69b13c1bae0b4dabb0ef087605c22451c5a7f6963d3261ae1cd160b15c2f1df49f4ca79f736721f1fe53727671b5da869e2355d484601c4b191c927969d5bcd6a6b66b9beafe923f289ae7a12144d3ff2ade885db665dc8b7576fd150e24089ae6d7451b13428e1fc02027992491c"
        //     }),
        //     leaf: 0xa8302ca22d80d042e8cea9c1e207f2dfd6b93aae6e449d284e93a36fe7754451,
        //     proof: MerkleTree.Proof({
        //         path: proof
        //     })
        // });

        // usl.deliverClaim(encodedClaim, certificate);
    }


    function test_verifyClaim4() public {
        // bytes memory encodedClaim = hex"000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000044000000000000000000000000000000000000000000000000000000000000005200000000000000000000000000000000000000000000000000000000000007a69000000000000000000000000000000000000000000000000000000000000000945564d56696577466e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c94a4ff5e7eb71bcc069bd87e7caa7d5e3a08147db9d3f0291e769797b7a3fae1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d493470000000000000000000000000000000000000000000000000000000000000000b961d8eaacda4b5cd3b38d078068ada980649321e43e85e877e7e036c06eb2b1ab37bb90d0eb14365e728dd406a10eff78831e3d816e52cbb55ec4b46282bbb633dcfde6e26fef2e68905657ba7427b356d2bdbf5119cb9f7c599f0bf5a720fd00000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009ac0000000000000000000000000000000000000000000000000000000001c9c380000000000000000000000000000000000000000000000000000000000007db280000000000000000000000000000000000000000000000000000000067ae61df39fd6e51aad88f6f4ce6ab8827279cfffb92266000000000000000000000000dc64a140aa3e981100a9beca4e685f962f0cf6c9000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000440bee938600000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000008a791620dd6260079bf849dc5567adc3f2fdc3180000000000000000000000008a791620dd6260079bf849dc5567adc3f2fdc31800000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000d99945ff100000000000000000000000000165878a594ca255338adfa4d48449f69242eb8f0000000000000000000000000165878a594ca255338adfa4d48449f69242eb8f00910000000000000000000000000000000000000000000000000000000000000001000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266004f994e54540800000002540be400000000000000000000000000cf7ed3acca5a467e9e704c703e8d87f634fb0fc9000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb922660002000000000000000000";
        // bytes32[] memory proof = new bytes32[](4);
        // proof[0] = 0xbcf0229b80ccb78ee383e3f847bf309ff9e37047bd591e0e65d039d25ff2e45e;
        // proof[1] = 0x83e83b3ad65a103bff7b0f508663516bd5152b2e3925dada431742646e634d6b;
        // proof[2] = 0xf231b587af5a61aaa3e27c629e67cc9e91f1cee249f28097aa05060902c177a3;
        // proof[3] = 0x69a077ad81bce23619530293ae6a6d862e01250d07d2204f675a3b91c582d1cb;

        // PodECDSA.Certificate memory certificate = PodECDSA.Certificate({
        //     certifiedReceipt: PodECDSA.CertifiedReceipt({
        //         receiptRoot: 0x8102714530d16b76ba8cde8c2a49892cb761735f620035c90b70e5e8cc0e0b2a,
        //         aggregateSignature: hex"ab2787ef6f05bcb720a7fa0aabe0753bc4d8a877cd595ff88ec69c932c91278743aac9c1529f5c17414ec2b7fd417de52e7c0a8d36bb978e898dd315d4c72c7e1b2845156b7f743accba90084ce0da181f259048718462bcc4a5b04fadb76fd1d477c2b0bde25eb4fcab928366dfc09b22d73b4df9e1e6ff80626d99393229c66f1bc152f6626c1b08d334ff4311b00e232cc2c999c9d11ab7009e44766c9d8fa25670e8eb71552bc5b62253410bee6f3e45948071f439a5ba2216dc789739313f241c"
        //     }),
        //     leaf: 0xb6aca76d6828b592f56e199643db733bfb226cdc10c53ef44dcedfd021eaa8df,
        //     proof: MerkleTree.Proof({
        //         path: proof
        //     })
        // });

        // usl.deliverClaim(encodedClaim, certificate);
    }
}